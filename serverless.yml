service: email

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${opt:stage, 'prod'}
  timeout: 30
  region: eu-west-1
  vpc:
    securityGroupIds:
      - ${ssm:/API/SecurityGroup}
    subnetIds:
      - ${ssm:/API/Subnet}

functions:
  email:
    handler: src/handler.email
    events:
      - sns:
          arn: ${ssm:/email/SNS/arn}
      - http:
          path: /hooks/{event}
          method: post
    environment:
      stage: ${self:provider.stage}
      AWS_KEY_ID: ${ssm:/email/AwsKeyId}
      AWS_KEY_SECRET: ${ssm:/email/AwsKeySecret~true}
      MAILGUN_KEY: ${ssm:/API/MailgunKey~true}
      DB_HOST: ${ssm:/DB/Host}
      DB_PROXY_HOST: ${ssm:/DB/Proxy/Host}
      DB_PORT: ${ssm:/DB/Port}
      DB_NAME: ${ssm:/DB/Name}
      DB_USER: ${ssm:/email/DB/User}
      DB_PASSWORD: ${ssm:/email/DB/Password~true}

plugins:
  - serverless-webpack
  - serverless-offline
  - serverless-offline-sns
  - serverless-domain-manager

custom:
  serverless-offline:
    httpPort: 4000
    noPrependStageInUrl: true
  webpack:
    webpackConfig: 'webpack.config.js'
    packager: 'npm'
    includeModules: true
  serverless-offline-sns:
    port: 4002
    debug: false
  customDomain:
    RestApiId:
      Ref: ApiGatewayRestApi
    domainName: email.upframe.io
    endpointType: 'regional'
    stage: ${opt:stage}
    createRoute53Record: false
